
package textExcel;

import java.io.*;
import java.util.Scanner;


public class Spreadsheet implements Grid{
	Cell[][] data;
	private int row = 20;
	private int column = 12;
	
	public Spreadsheet(){
		clear(); // 
	}

	@Override
	public String processCommand(String command){
		String[] splitWords = command.split(" ", 3);

		if(command.equals("")){
			return "";
		}
	
		
		else if(splitWords.length == 3 && splitWords[2].startsWith("\"")){
			String word = splitWords[2].substring(1, splitWords[2].length() - 1);
			setCell(new SpreadsheetLocation(splitWords[0]), new TextCell(word));
			return getGridText();
		}

		else if(splitWords.length == 3 && splitWords[1].equals("=")){
			
			if(splitWords[2].contains("%")){
				String inputNumber = splitWords[2].substring(0, splitWords[2].length() - 1);
				setCell(new SpreadsheetLocation(splitWords[0]), new PercentCell(inputNumber));
				return getGridText();
			}
			
			else if(splitWords[2].startsWith("(") && splitWords[2].endsWith(")")){
				setCell(new SpreadsheetLocation(splitWords[0]), new FormulaCell(splitWords[2], this));
				return getGridText();
			
			}else{
				String value = splitWords[2];
				setCell(new SpreadsheetLocation(splitWords[0]), new ValueCell(value));
				return getGridText();
			}
		}

		
		else if(splitWords.length == 1 && !splitWords[0].equalsIgnoreCase("clear")){
			String value = this.getCell(new SpreadsheetLocation(command)).fullCellText();
			if(value.endsWith(".0")){
				value = getCell(new SpreadsheetLocation(command)).fullCellText().substring(0, value.length() - 2);
			}
			return value;
		}

		else if(splitWords.length == 2 && splitWords[0].equalsIgnoreCase("clear")){
			clearLocation(new SpreadsheetLocation(splitWords[1]));
			return getGridText();
		}

		else if(splitWords.length == 1 && splitWords[0].equalsIgnoreCase("clear")){
			clear();
			return getGridText();
		}
		return "";
	}


	public void clear(){
		data = new Cell[row][column];
		for(int i = 0; i < row; i++){
			for(int j = 0; j < column; j++){
				data[i][j] = new EmptyCell();
			}
		}
	}

	public void clearLocation(SpreadsheetLocation location){
		setCell(location, new EmptyCell());
	}
	
	public int getRows(){
		return data.length;
	}

	public int getCols(){
		return data[0].length;
	}

		public Cell getCell(Location loc){
		return data[loc.getRow()][loc.getCol()];
	}
	
	public void setCell(SpreadsheetLocation cellLoc, Cell value) {
		data[cellLoc.getRow()][cellLoc.getCol()] = value;
	}
	
/*	
	public String getGridText(){
		String sheet = "   ";

		for (int i = 0; i < data[0].length; i++) {
			sheet += ("|" + (char) (i + 'A') + "         ");
		}
		sheet += "|\n";

		for (int i = 0; i < data.length; i++) {
			sheet += String.format("%-3d", i + 1) + alignRow(data[i]);
		}
		return sheet;
	}
	
	//formats the rows in the sheet
	public String alignRow(Cell[] cols) {
		String row = "";
		for (Cell i : cols) {
			row += "|" + i.abbreviatedCellText();
		}
		row += "|\n";
		return row;
	}
*/
	public String getGridText()
	{
		/* 
		String topLetter = "   |";
		for(char i = 'A'; i<='L'; i++){
			topLetter += i + "         |";
		}
		String numbers = "\n";
		*/
		String numbers = "\n";
	 		String[] letters = {"A","B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L"};
			System.out.print("          ");
	 		for( int k = 0; k<12; k++){
				System.out.print(letters[k] + "  ");
				System.out.print("|"+letters[k] + "         ");
	 		}
	 		System.out.println();
		for(int i = 0;i < 20;i++){
			if(i<9){
				numbers += (i+1);
				numbers += "  |";
				for(int j = 0; j<12;j++){
					numbers += data[i][j].abbreviatedCellText() + "|";
				}
				numbers +="\n";
			}else{
				numbers += (i+1);
				numbers += " |";
				for(int j = 0; j<12;j++){
					numbers += data[i][j].abbreviatedCellText() + "|";
				}
				numbers +="\n";
			}
		}
		return numbers;
	}

	private Cell setType(String cellType, String value) {
		if (cellType.equals("TextCell")) {
			return new TextCell(value);
		}
		else if (cellType.equals("ValueCell")) {
			return new ValueCell(value);
		}
		else if (cellType.equals("PercentCell")) {
			return new PercentCell(value);
		}
		else if (cellType.equals("FormulaCell")) {
			return new FormulaCell(value, this);
		}
		return null;
	}
}